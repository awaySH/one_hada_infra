name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build and push images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Backend build and push
          echo "Building backend..."
          cd backend/one_hada_infra
          chmod +x gradlew
          ./gradlew build -x test
          docker build -t $DOCKER_USERNAME/backend:latest .
          docker push $DOCKER_USERNAME/backend:latest
          
          # Frontend build and push
          echo "Building frontend..."
          cd ../../frontend/ONE-HADA-FE/one-hada
          ls -la  # 현재 디렉토리의 내용 확인
          docker build -t $DOCKER_USERNAME/frontend:latest .
          docker push $DOCKER_USERNAME/frontend:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            
            # 필요한 환경 변수로 .env 파일 생성
            cat << EOF > .env
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            EOF
            
            # 권한 설정
            chmod 600 .env
            
            # 배포
            docker-compose pull
            docker-compose down
            docker-compose up -d
