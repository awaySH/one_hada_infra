name: Deploy Application

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check directory structure
        run: ls -la

      - name: Frontend Tests
        if: hashFiles('frontend/package.json') != ''
        run: |
          cd frontend
          npm install
          npm test

      - name: Backend Tests
        run: |
          cd backend
          npm install
          npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # Build and push backend
          docker build -t $DOCKER_USERNAME/backend:latest ./backend
          docker push $DOCKER_USERNAME/backend:latest
          
          # Build and push frontend
          docker build -t $DOCKER_USERNAME/frontend:latest ./frontend
          docker push $DOCKER_USERNAME/frontend:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/app
            echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" > .env
            docker-compose pull
            docker-compose down
            docker-compose up -d
